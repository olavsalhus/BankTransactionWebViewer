@page
<!DOCTYPE html>
<html lang="en" >
<title>Transaction Viewer</title>

<link href="~/transactions.css" rel="stylesheet" />

<!--Datatables core -->
<link href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>

<!-- Datatables extension: Column reordering -->
<link href="https://cdn.datatables.net/colreorder/1.5.6/css/colReorder.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/colreorder/1.5.6/js/dataTables.colReorder.min.js"></script>

<!-- Datatables extension: File exports -->
<script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>

<!-- Datatables extension: Responsive -->
<link href="https://cdn.datatables.net/responsive/2.3.0/css/responsive.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/responsive/2.3.0/js/dataTables.responsive.min.js"></script>

<a style="float: right; font-size: x-large" href="/" ><button class="dt-button">Log out</button></a>

<div id="loading-spinner"></div>

<style>pre { white-space: pre-wrap; }</style>

<!-- Development -->
<script src="https://unpkg.com/@@popperjs/core@@2/dist/umd/popper.min.js"></script>
<script src="https://unpkg.com/tippy.js@@6/dist/tippy-bundle.umd.js"></script>

<script>
    fetch("/GetAccessToken").then(response => response.json()).then(token =>
        fetch(`/ListBankAccounts?reference=@Request.Query["ref"]&access_token=${token.access}`).then(response => response.json())
        .then(ShowBankAccounts)
    )

    const ToggleToolTip = (button) =>
        button._tippy ?? tippy(button, {
            content: (reference) => `<pre><code>${unescape(reference.dataset.json)}</code></pre>`,
            allowHTML: true, maxWidth: 1000, trigger: 'click', interactive: true,
            onCreate: (instance) => instance.show(),
            onHidden: (instance) => instance.destroy()
        });
    
    const columns = [
        { text: 'Booking date', path: 'bookingDate' },
        { text: 'JSON', render: (data, type, row, meta) =>
            `<button class='tippy' onclick='ToggleToolTip(this)' data-json='${escape(JSON.stringify(row, null, 2))}'>JSON</button>`
        },
        { text: 'BBAN', path: 'debtorAccount.bban' },
        { text: 'IBAN', path: 'debtorAccount.iban' },
        { text: 'Description', path: 'remittanceInformationUnstructured' },
        { text: 'Amount', path: 'transactionAmount.amount' },
        { text: 'Currency', path: 'transactionAmount.currency' },
        { text: 'Valuedate', path: 'valueDate' },
        { text: 'Debtor', path: 'debtorName' },
        { text: 'Creditor', path: 'creditorName' },
        { text: 'Creditor account', path: 'creditorAccount.bban' }
    ]


    const ShowBankAccounts = bankAccounts => {
        bankAccounts.forEach(account => {
            const title = `Account: ${account.metadata.iban}, balance: ${account.balances[0].balanceAmount.amount} ${account.balances[0].balanceAmount.currency}`
            var details = document.createElement("details")
            details.open = bankAccounts.length == 1
            details.innerHTML = `
                <summary style="cursor: pointer;">
                    <h2 style="display: inline;">${title}</h2>
                </summary>
                <table id="${account.id}" class="display" style="width: 100%">
                    <thead>
                        <tr>
                            ${columns.map(column => `<th>${column.text}</th>`).join('')}
                        </tr>
                    </thead>
                </table>`

            document.body.appendChild(details)

            const filename = `transactions-${account.metadata.iban}`
            new DataTable(`#${account.id}`, {
                data: [...account.transactions.booked, ...account.transactions.pending],
                columns: columns.map(column => ({ data: column.path, render: column.render, defaultContent: '' })),
                paging: false, order: [[0, 'desc']], responsive: true, colReorder: { realtime: false },
                dom: 'Bfrtip',
                buttons: [
                    { extend: 'copy', title },
                    { extend: 'excel', filename, title },
                    { extend: 'csv', filename, title: null },
                    { extend: 'pdf', filename, title, orientation: 'landscape' }
                ]
            })
        })

        document.querySelector("#loading-spinner").remove()
    }
</script>
